cmake_minimum_required(VERSION 3.15)
project(socket_project)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++11 -DEBUG -ggdb -Wall -Wno-unused -O0 -fPIC")
set(CMAKE_C_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++11 -DEBUG -ggdb -Wall -Wno-unused -O0 -fPIC")
set(CMAKE_C_COMPILER /usr/bin/gcc)
set(CMAKE_CXX_COMPILER /usr/bin/g++)

set(LIBPATH ${PROJECT_SOURCE_DIR}/lib)
set(EXECPATH ${PROJECT_SOURCE_DIR}/bin)
set(HEADPATH ${PROJECT_SOURCE_DIR}/inc)

set(APPNAME1 01_server)
set(APPNAME2 02_client)
set(SOCKETLIB 03_socket)
set(SETSIDLIB 04_setsid)
include_directories(${HEADPATH})

option(CROSSCOMPILE_ENABLED "Whether to build for arm" OFF)
if (CROSSCOMPILE_ENABLED)
    set(CMAKE_SYSTEM_NAME Linux)
    set(CMAKE_SYSTEM_PROCESSOR arm)
    set(target_arch aarch64-linux-gnu)
    # set(CMAKE_C_COMPILER /home/book/work_space/gcc-linaro-arm-linux-gnueabihf-4.7-2013.03-20130313_linux/bin/arm-linux-gnueabihf-gcc)
    set(CMAKE_C_COMPILER /home/book/100ask_imx6ull-sdk/ToolChain/arm-buildroot-linux-gnueabihf_sdk-buildroot/bin/arm-buildroot-linux-gnueabihf-gcc)
    set(CMAKE_CXX_COMPILER /home/book/100ask_imx6ull-sdk/ToolChain/arm-buildroot-linux-gnueabihf_sdk-buildroot/bin/arm-buildroot-linux-gnueabihf-g++)
    set(CMAKE_LIBRARY_ARCHITECTURE ${target_arch} CACHE STRING "" FORCE)
    set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
    set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
    set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
    set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)
endif()

add_subdirectory(01_server)
add_subdirectory(02_client)
add_subdirectory(03_socket)
add_subdirectory(04_setsid)